<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1051</width>
    <height>871</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">padding:10px;</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="styleSheet">
    <string notr="true">padding: 10px;</string>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout">
    <item>
     <spacer name="verticalSpacer_3">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <widget class="QLabel" name="label">
      <property name="font">
       <font>
        <pointsize>20</pointsize>
        <weight>75</weight>
        <italic>true</italic>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(20, 51, 82);
margin-top:23px;</string>
      </property>
      <property name="text">
       <string>Application de Recherche Opérationnelle</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </item>
    <item>
     <spacer name="verticalLabelSpacer">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QVBoxLayout" name="introVLayout">
      <property name="leftMargin">
       <number>20</number>
      </property>
      <property name="rightMargin">
       <number>20</number>
      </property>
      <property name="bottomMargin">
       <number>0</number>
      </property>
      <item>
       <widget class="QLabel" name="introLabel">
        <property name="font">
         <font>
          <pointsize>15</pointsize>
          <weight>75</weight>
          <italic>false</italic>
          <bold>true</bold>
          <strikeout>false</strikeout>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">color: #6892ad;</string>
        </property>
        <property name="text">
         <string>Introduction :</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignLeading</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="introDesc">
        <property name="font">
         <font>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">color: #262626;margin-left:10px;</string>
        </property>
        <property name="text">
         <string>Bienvenue dans notre application dédiée à la Recherche Opérationnelle, un outil conçu pour résoudre des problèmes complexes à l'aide d'algorithmes avancés. Nous sommes enchantés de vous présenter notre travail en tant que membres du groupe de projet : Rim Jbeli, Ines Samet, Sara Drine et Mohamed Aziz Ben Ghorbel. Plongez dans les défis d'optimisation que nous avons abordés et découvrez les solutions que nous avons élaborées ensemble.</string>
        </property>
        <property name="wordWrap">
         <bool>true</bool>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="verticalSpacer_2">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <spacer name="verticalSpacer_4">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <widget class="QSplitter" name="pb1_splitter">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <widget class="QWidget" name="left_widget">
       <layout class="QVBoxLayout" name="pb1_left_layout">
        <property name="leftMargin">
         <number>30</number>
        </property>
        <item>
         <layout class="QVBoxLayout" name="verticalLayout_3">
          <item>
           <spacer name="verticalSpacer_10">
            <property name="orientation">
             <enum>Qt::Vertical</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>20</width>
              <height>40</height>
             </size>
            </property>
           </spacer>
          </item>
          <item>
           <widget class="QLabel" name="pb1_title">
            <property name="font">
             <font>
              <pointsize>15</pointsize>
              <weight>75</weight>
              <italic>false</italic>
              <bold>true</bold>
              <strikeout>false</strikeout>
             </font>
            </property>
            <property name="styleSheet">
             <string notr="true">color: #6892ad;</string>
            </property>
            <property name="text">
             <string>Problème 1 : Plus court chemin avec contraintes d'horaires</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignLeading</set>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="pb1_desc">
            <property name="minimumSize">
             <size>
              <width>0</width>
              <height>150</height>
             </size>
            </property>
            <property name="font">
             <font>
              <pointsize>12</pointsize>
             </font>
            </property>
            <property name="styleSheet">
             <string notr="true">color: #262626;margin-left:10px;</string>
            </property>
            <property name="text">
             <string>Nous sommes confrontés au défi de planifier de manière optimale les trajets dans un réseau donné, tout en tenant compte de diverses contraintes de temps et de coûts associés. Le réseau est représenté par un graphe non orienté où les nœuds représentent des emplacements et les arêtes des connexions entre ces emplacements. 
L'objectif principal est de trouver des itinéraires optimaux dans le réseau, en minimisant les coûts totaux tout en respectant les contraintes de temps spécifiques à chaque nœud. 
Ce problème peut être appliqué à divers contextes, tels que la logistique de livraison de colis, la planification de routes pour les transports en commun, la gestion des itinéraires dans les réseaux de télécommunication, etc. Il est particulièrement utile dans toute situation où des trajets efficaces doivent être planifiés tout en tenant compte des contraintes de temps et de coûts.</string>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
         </layout>
        </item>
        <item>
         <spacer name="verticalSpacer_11">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <layout class="QVBoxLayout" name="verticalLayout_2">
          <item>
           <widget class="QLabel" name="pb2_title">
            <property name="font">
             <font>
              <pointsize>15</pointsize>
              <weight>75</weight>
              <italic>false</italic>
              <bold>true</bold>
              <strikeout>false</strikeout>
             </font>
            </property>
            <property name="styleSheet">
             <string notr="true">color: #6892ad;</string>
            </property>
            <property name="text">
             <string>Problème 2 : Planification Agricole avec Contraintes </string>
            </property>
            <property name="alignment">
             <set>Qt::AlignLeading</set>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="pb2_desc">
            <property name="font">
             <font>
              <pointsize>12</pointsize>
             </font>
            </property>
            <property name="styleSheet">
             <string notr="true">color: #262626;margin-left:10px;</string>
            </property>
            <property name="text">
             <string>Un agriculteur possède un troupeau d'animaux comprenant des adultes et des jeunes. Chaque animal a besoin d'une certaine quantité de terrain et génère des revenus par an grâce à la production de produits comme le lait ou les œufs. 
Les animaux se reproduisent chaque année, avec une partie de la progéniture vendue peu après la naissance. Les animaux sont vendus à un certain âge, en tenant compte des décès annuels chez les adultes et les jeunes. 
La ferme a une capacité d'hébergement maximale, et il est possible d'ajouter des logements supplémentaires.
En plus de l'élevage, la ferme produit deux types de grains, chacun ayant un rendement différent par hectare. Ces grains peuvent être achetés et vendus à des prix différents par tonne. La ferme nécessite également de la main-d'œuvre pour la production animale et la culture des grains.
L'agriculteur a également la possibilité de contracter un prêt pour financer les dépenses en capital, avec un taux d'intérêt annuel donné. Les paiements de prêt sont remboursés annuellement. 
L'objectif de l'agriculteur est de maximiser ses bénéfices tout en respectant certaines contraintes, telles que maintenir le nombre total d'animaux dans une plage donnée et limiter l'augmentation ou la réduction du troupeau. 
Le défi consiste à élaborer un plan pour les années à venir qui optimise les bénéfices de l'agriculteur tout en tenant compte des contraintes de capacité, des coûts de main-d'œuvre, des revenus de la vente d'animaux et de grains, ainsi que des remboursements de prêt.</string>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="right_widget">
       <layout class="QVBoxLayout" name="pb1_right_layout">
        <property name="rightMargin">
         <number>30</number>
        </property>
        <item>
         <spacer name="verticalSpacer_9">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pb1Button">
          <property name="font">
           <font>
            <pointsize>11</pointsize>
           </font>
          </property>
          <property name="cursor">
           <cursorShape>PointingHandCursor</cursorShape>
          </property>
          <property name="styleSheet">
           <string notr="true">
                        QPushButton {
                            background-color: #4a9fab;
                            border: none;
                            color: white;
                            padding: 10px ;
                            margin: 10px;
                            height: 35px;
                        }
                        QPushButton:hover {
                            background-color: #3e858f;
                        }
                    </string>
          </property>
          <property name="text">
           <string>Tester</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer_12">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <spacer name="verticalSpacer_7">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pb2Button">
          <property name="font">
           <font>
            <pointsize>11</pointsize>
           </font>
          </property>
          <property name="cursor">
           <cursorShape>PointingHandCursor</cursorShape>
          </property>
          <property name="styleSheet">
           <string notr="true">
                           QPushButton {
                               background-color: #4a9fab;
                               border: none;
                               color: white;
                               padding: 10px ;
                               margin: 10px;
                               height: 35px;
                           }
                           QPushButton:hover {
                               background-color: #3e858f;
                           }
                       </string>
          </property>
          <property name="text">
           <string>Tester</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer_8">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
    <item>
     <spacer name="verticalSpacer_6">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <spacer name="verticalSpacer">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <spacer name="verticalSpacer_5">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1051</width>
     <height>46</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
